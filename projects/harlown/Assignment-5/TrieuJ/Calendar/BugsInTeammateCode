one of the bugs that I found was in isValid() in the Appt class line 115. The bug was that if the appointment hour was less than 4 hours, then the appointment would not be valid. I found this because I received warnings in several test code segments so I went through them and started commenting out asserts until the error went away. The assert that caused the error to go away was assertTrue(appt.isValid()). I was able to determine that the bug was the hour variable because I saw it in the code but also because when I changed hour to be larger than 4, the error went away. To see the images, view assingment 5 pdf.

The next bug that I found was also in isValid() in the Appt class line 113. The new bug that I found is that the month entered is not the same month that is tested for validity. How CalendarUtil.numDaysinMonth(year,month) works is January represents a 0 so when the user enters a 1 for January it needs to be subtracted by 1. This means that all months needed to be subtracted by 1 which does not happen in the code which is a bug. I found this by testing January 30th and the test failed because isValid() took January 30th and interpreted it as February 30th which does not exist. 

I found both of these bugs to be interesting because they could both easily slip through testing quite easily. In order to test the starthour<4 you would have to test specific/ boundary cases otherwise a time that is valid could be considered not valid. For the other bug, I found it interesting because you really have to understand how to code works in order to catch the bug. When I first discovered the bug, I didn’t know what was really going on because I tried January 30th and it wouldn’t become valid so I had to look up haw NumDaysInMonth worked. I found these bugs to be interesting because it test both your testing knowledge as well as knowledge on how the program works. Z))))))

